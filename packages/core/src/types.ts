import * as CSS from './types/css'

interface HtmlTags {
  address?: StyleObject,
  article?: StyleObject,
  aside?: StyleObject,
  footer?: StyleObject,
  header?: StyleObject,
  h1?: StyleObject,
  h2?: StyleObject,
  h3?: StyleObject,
  h4?: StyleObject,
  h5?: StyleObject,
  h6?: StyleObject,
  hgroup?: StyleObject,
  main?: StyleObject,
  nav?: StyleObject,
  section?: StyleObject,
  blockquote?: StyleObject,
  dd?: StyleObject,
  div?: StyleObject,
  dl?: StyleObject,
  dt?: StyleObject,
  figcaption?: StyleObject,
  figure?: StyleObject,
  hr?: StyleObject,
  li?: StyleObject,
  ol?: StyleObject,
  p?: StyleObject,
  pre?: StyleObject,
  ul?: StyleObject,
  a?: StyleObject,
  abbr?: StyleObject,
  b?: StyleObject,
  bdi?: StyleObject,
  bdo?: StyleObject,
  br?: StyleObject,
  cite?: StyleObject,
  code?: StyleObject,
  data?: StyleObject,
  dfn?: StyleObject,
  em?: StyleObject,
  i?: StyleObject,
  kbd?: StyleObject,
  mark?: StyleObject,
  q?: StyleObject,
  rb?: StyleObject,
  rp?: StyleObject,
  rt?: StyleObject,
  rtc?: StyleObject,
  ruby?: StyleObject,
  s?: StyleObject,
  samp?: StyleObject,
  small?: StyleObject,
  span?: StyleObject,
  strong?: StyleObject,
  sub?: StyleObject,
  sup?: StyleObject,
  time?: StyleObject,
  u?: StyleObject,
  var?: StyleObject,
  wbr?: StyleObject,
  area?: StyleObject,
  audio?: StyleObject,
  img?: StyleObject,
  map?: StyleObject,
  track?: StyleObject,
  video?: StyleObject,
  embed?: StyleObject,
  iframe?: StyleObject,
  object?: StyleObject,
  param?: StyleObject,
  picture?: StyleObject,
  source?: StyleObject,
  canvas?: StyleObject,
  noscript?: StyleObject,
  script?: StyleObject,
  del?: StyleObject,
  ins?: StyleObject,
  caption?: StyleObject,
  col?: StyleObject,
  colgroup?: StyleObject,
  table?: StyleObject,
  tbody?: StyleObject,
  td?: StyleObject,
  tfoot?: StyleObject,
  th?: StyleObject,
  thead?: StyleObject,
  tr?: StyleObject,
  button?: StyleObject,
  datalist?: StyleObject,
  fieldset?: StyleObject,
  form?: StyleObject,
  input?: StyleObject,
  label?: StyleObject,
  legend?: StyleObject,
  meter?: StyleObject,
  optgroup?: StyleObject,
  option?: StyleObject,
  output?: StyleObject,
  progress?: StyleObject,
  select?: StyleObject,
  textarea?: StyleObject,
  details?: StyleObject,
  dialog?: StyleObject,
  menu?: StyleObject,
  summary?: StyleObject,
}


export interface StyleSheet {
  [componentVariantId: string]: StyleObject
}

export interface StyleObject extends CSS.Properties, HtmlTags {
  [MediaQueryOrSelector: string]: any
}

export type StyleGenerator = (props: React.ComponentProps<any>) => StyleObject
export type StyleList = Array<StyleObject|StyleGenerator>
export type Styles = StyleObject | StyleGenerator | StyleList

export type CssValue = string | number | ResponsiveVariable
export type ResponsiveValue = [mediaRule: string, cssValue: string]
export type ResponsiveDefaultValue = String
export type ResponsiveVariable = Array<ResponsiveDefaultValue | ResponsiveValue>